// Code generated by protoc-gen-go. DO NOT EDIT.
// source: candlestick/v1/candlestick.proto

package candlestick

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Candlestick struct {
	OpenTime                 int64    `protobuf:"varint,1,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	Open                     float64  `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High                     float64  `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low                      float64  `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Close                    float64  `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume                   float64  `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
	CloseTime                int64    `protobuf:"varint,7,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	QuoteAssetVolume         float64  `protobuf:"fixed64,8,opt,name=quote_asset_volume,json=quoteAssetVolume,proto3" json:"quote_asset_volume,omitempty"`
	TradeNum                 int64    `protobuf:"varint,9,opt,name=trade_num,json=tradeNum,proto3" json:"trade_num,omitempty"`
	TakerBuyBaseAssetVolume  float64  `protobuf:"fixed64,10,opt,name=taker_buy_base_asset_volume,json=takerBuyBaseAssetVolume,proto3" json:"taker_buy_base_asset_volume,omitempty"`
	TakerBuyQuoteAssetVolume float64  `protobuf:"fixed64,11,opt,name=taker_buy_quote_asset_volume,json=takerBuyQuoteAssetVolume,proto3" json:"taker_buy_quote_asset_volume,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *Candlestick) Reset()         { *m = Candlestick{} }
func (m *Candlestick) String() string { return proto.CompactTextString(m) }
func (*Candlestick) ProtoMessage()    {}
func (*Candlestick) Descriptor() ([]byte, []int) {
	return fileDescriptor_186cda349b51dcdd, []int{0}
}

func (m *Candlestick) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candlestick.Unmarshal(m, b)
}
func (m *Candlestick) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candlestick.Marshal(b, m, deterministic)
}
func (m *Candlestick) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candlestick.Merge(m, src)
}
func (m *Candlestick) XXX_Size() int {
	return xxx_messageInfo_Candlestick.Size(m)
}
func (m *Candlestick) XXX_DiscardUnknown() {
	xxx_messageInfo_Candlestick.DiscardUnknown(m)
}

var xxx_messageInfo_Candlestick proto.InternalMessageInfo

func (m *Candlestick) GetOpenTime() int64 {
	if m != nil {
		return m.OpenTime
	}
	return 0
}

func (m *Candlestick) GetOpen() float64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candlestick) GetHigh() float64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candlestick) GetLow() float64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candlestick) GetClose() float64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candlestick) GetVolume() float64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candlestick) GetCloseTime() int64 {
	if m != nil {
		return m.CloseTime
	}
	return 0
}

func (m *Candlestick) GetQuoteAssetVolume() float64 {
	if m != nil {
		return m.QuoteAssetVolume
	}
	return 0
}

func (m *Candlestick) GetTradeNum() int64 {
	if m != nil {
		return m.TradeNum
	}
	return 0
}

func (m *Candlestick) GetTakerBuyBaseAssetVolume() float64 {
	if m != nil {
		return m.TakerBuyBaseAssetVolume
	}
	return 0
}

func (m *Candlestick) GetTakerBuyQuoteAssetVolume() float64 {
	if m != nil {
		return m.TakerBuyQuoteAssetVolume
	}
	return 0
}

func init() {
	proto.RegisterType((*Candlestick)(nil), "candlestick.v1.Candlestick")
}

func init() {
	proto.RegisterFile("candlestick/v1/candlestick.proto", fileDescriptor_186cda349b51dcdd)
}

var fileDescriptor_186cda349b51dcdd = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x6b, 0x3a, 0x31,
	0x10, 0xc5, 0x59, 0x7f, 0x7d, 0xdd, 0x11, 0xbe, 0x48, 0x28, 0x6d, 0xc0, 0x16, 0xa4, 0x27, 0x0f,
	0xc5, 0x20, 0x3d, 0xb6, 0x14, 0xd4, 0x7b, 0xa1, 0x52, 0x7a, 0xe8, 0x25, 0x64, 0x63, 0xd0, 0xc5,
	0xcd, 0x66, 0xbb, 0x49, 0x56, 0xfc, 0xd7, 0x7b, 0x2a, 0x99, 0xb5, 0xb8, 0x4a, 0x6f, 0xef, 0x7d,
	0x32, 0xf3, 0x78, 0x61, 0x60, 0x2c, 0x45, 0xbe, 0xce, 0x94, 0x75, 0xa9, 0xdc, 0xb1, 0x6a, 0xc6,
	0x1a, 0x76, 0x5a, 0x94, 0xc6, 0x19, 0xf2, 0xbf, 0x89, 0xaa, 0xd9, 0xfd, 0x77, 0x0b, 0x06, 0xcb,
	0x13, 0x22, 0x23, 0x88, 0x4d, 0xa1, 0x72, 0xee, 0x52, 0xad, 0x68, 0x34, 0x8e, 0x26, 0xed, 0x55,
	0x3f, 0x80, 0xf7, 0x54, 0x2b, 0x42, 0xa0, 0x13, 0x34, 0x6d, 0x8d, 0xa3, 0x49, 0xb4, 0x42, 0x1d,
	0xd8, 0x36, 0xdd, 0x6c, 0x69, 0xbb, 0x66, 0x41, 0x93, 0x21, 0xb4, 0x33, 0xb3, 0xa7, 0x1d, 0x44,
	0x41, 0x92, 0x2b, 0xe8, 0xca, 0xcc, 0x58, 0x45, 0xbb, 0xc8, 0x6a, 0x43, 0xae, 0xa1, 0x57, 0x99,
	0xcc, 0x6b, 0x45, 0x7b, 0x88, 0x8f, 0x8e, 0xdc, 0x01, 0xe0, 0x40, 0xdd, 0xe2, 0x1f, 0xb6, 0x88,
	0x91, 0x60, 0x8d, 0x07, 0x20, 0x5f, 0xde, 0x38, 0xc5, 0x85, 0xb5, 0xca, 0xf1, 0x63, 0x44, 0x1f,
	0x23, 0x86, 0xf8, 0x32, 0x0f, 0x0f, 0x1f, 0x75, 0xd8, 0x08, 0x62, 0x57, 0x8a, 0xb5, 0xe2, 0xb9,
	0xd7, 0x34, 0xae, 0x7f, 0x84, 0xe0, 0xd5, 0x6b, 0xf2, 0x0c, 0x23, 0x27, 0x76, 0xaa, 0xe4, 0x89,
	0x3f, 0xf0, 0x44, 0xd8, 0x8b, 0x4c, 0xc0, 0xcc, 0x1b, 0x1c, 0x59, 0xf8, 0xc3, 0x42, 0xd8, 0xb3,
	0xe8, 0x17, 0xb8, 0x3d, 0x6d, 0xff, 0x51, 0x69, 0x80, 0xeb, 0xf4, 0x77, 0xfd, 0xed, 0xa2, 0xda,
	0x62, 0xf9, 0x39, 0xdf, 0xa4, 0x6e, 0xeb, 0x93, 0xa9, 0x34, 0x9a, 0xed, 0x45, 0x59, 0x6c, 0x4a,
	0xe6, 0xd6, 0x89, 0xe0, 0xd2, 0x68, 0x6d, 0x72, 0x86, 0x37, 0x93, 0x26, 0x63, 0xe7, 0x77, 0x7d,
	0x6a, 0xd8, 0xa4, 0x87, 0x43, 0x8f, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x44, 0xb8, 0x8d, 0x0a,
	0xfc, 0x01, 0x00, 0x00,
}
