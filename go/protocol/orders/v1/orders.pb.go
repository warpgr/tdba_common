// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orders/v1/orders.proto

package orders

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExchangeOrder struct {
	Symbol                   string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OrderId                  int64    `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ClientOrderId            string   `protobuf:"bytes,3,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	TransactTime             int64    `protobuf:"varint,4,opt,name=transact_time,json=transactTime,proto3" json:"transact_time,omitempty"`
	Price                    float64  `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	OrigQuantity             float64  `protobuf:"fixed64,6,opt,name=orig_quantity,json=origQuantity,proto3" json:"orig_quantity,omitempty"`
	ExecutedQuantity         float64  `protobuf:"fixed64,7,opt,name=executed_quantity,json=executedQuantity,proto3" json:"executed_quantity,omitempty"`
	CummulativeQuoteQuantity float64  `protobuf:"fixed64,8,opt,name=cummulative_quote_quantity,json=cummulativeQuoteQuantity,proto3" json:"cummulative_quote_quantity,omitempty"`
	IsIsolated               bool     `protobuf:"varint,9,opt,name=is_isolated,json=isIsolated,proto3" json:"is_isolated,omitempty"`
	Status                   string   `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	TimeInForce              string   `protobuf:"bytes,11,opt,name=time_in_force,json=timeInForce,proto3" json:"time_in_force,omitempty"`
	Type                     string   `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	Side                     string   `protobuf:"bytes,13,opt,name=side,proto3" json:"side,omitempty"`
	Fills                    []*Fill  `protobuf:"bytes,14,rep,name=fills,proto3" json:"fills,omitempty"`
	MarginBuyBorrowAmount    float64  `protobuf:"fixed64,15,opt,name=margin_buy_borrow_amount,json=marginBuyBorrowAmount,proto3" json:"margin_buy_borrow_amount,omitempty"`
	MarginBuyBorrowAsset     float64  `protobuf:"fixed64,16,opt,name=margin_buy_borrow_asset,json=marginBuyBorrowAsset,proto3" json:"margin_buy_borrow_asset,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ExchangeOrder) Reset()         { *m = ExchangeOrder{} }
func (m *ExchangeOrder) String() string { return proto.CompactTextString(m) }
func (*ExchangeOrder) ProtoMessage()    {}
func (*ExchangeOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_711dd2fb3b2d285e, []int{0}
}

func (m *ExchangeOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeOrder.Unmarshal(m, b)
}
func (m *ExchangeOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeOrder.Marshal(b, m, deterministic)
}
func (m *ExchangeOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeOrder.Merge(m, src)
}
func (m *ExchangeOrder) XXX_Size() int {
	return xxx_messageInfo_ExchangeOrder.Size(m)
}
func (m *ExchangeOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeOrder proto.InternalMessageInfo

func (m *ExchangeOrder) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ExchangeOrder) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *ExchangeOrder) GetClientOrderId() string {
	if m != nil {
		return m.ClientOrderId
	}
	return ""
}

func (m *ExchangeOrder) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func (m *ExchangeOrder) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ExchangeOrder) GetOrigQuantity() float64 {
	if m != nil {
		return m.OrigQuantity
	}
	return 0
}

func (m *ExchangeOrder) GetExecutedQuantity() float64 {
	if m != nil {
		return m.ExecutedQuantity
	}
	return 0
}

func (m *ExchangeOrder) GetCummulativeQuoteQuantity() float64 {
	if m != nil {
		return m.CummulativeQuoteQuantity
	}
	return 0
}

func (m *ExchangeOrder) GetIsIsolated() bool {
	if m != nil {
		return m.IsIsolated
	}
	return false
}

func (m *ExchangeOrder) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ExchangeOrder) GetTimeInForce() string {
	if m != nil {
		return m.TimeInForce
	}
	return ""
}

func (m *ExchangeOrder) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ExchangeOrder) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *ExchangeOrder) GetFills() []*Fill {
	if m != nil {
		return m.Fills
	}
	return nil
}

func (m *ExchangeOrder) GetMarginBuyBorrowAmount() float64 {
	if m != nil {
		return m.MarginBuyBorrowAmount
	}
	return 0
}

func (m *ExchangeOrder) GetMarginBuyBorrowAsset() float64 {
	if m != nil {
		return m.MarginBuyBorrowAsset
	}
	return 0
}

type Fill struct {
	TradeId              int64    `protobuf:"varint,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	Price                float64  `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity             float64  `protobuf:"fixed64,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Commission           float64  `protobuf:"fixed64,4,opt,name=commission,proto3" json:"commission,omitempty"`
	CommisionAsset       float64  `protobuf:"fixed64,5,opt,name=commision_asset,json=commisionAsset,proto3" json:"commision_asset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fill) Reset()         { *m = Fill{} }
func (m *Fill) String() string { return proto.CompactTextString(m) }
func (*Fill) ProtoMessage()    {}
func (*Fill) Descriptor() ([]byte, []int) {
	return fileDescriptor_711dd2fb3b2d285e, []int{1}
}

func (m *Fill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fill.Unmarshal(m, b)
}
func (m *Fill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fill.Marshal(b, m, deterministic)
}
func (m *Fill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fill.Merge(m, src)
}
func (m *Fill) XXX_Size() int {
	return xxx_messageInfo_Fill.Size(m)
}
func (m *Fill) XXX_DiscardUnknown() {
	xxx_messageInfo_Fill.DiscardUnknown(m)
}

var xxx_messageInfo_Fill proto.InternalMessageInfo

func (m *Fill) GetTradeId() int64 {
	if m != nil {
		return m.TradeId
	}
	return 0
}

func (m *Fill) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Fill) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Fill) GetCommission() float64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *Fill) GetCommisionAsset() float64 {
	if m != nil {
		return m.CommisionAsset
	}
	return 0
}

type CreateOrder struct {
	Exchange             string   `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price                float64  `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity             float64  `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Side                 string   `protobuf:"bytes,6,opt,name=side,proto3" json:"side,omitempty"`
	TimeInForce          string   `protobuf:"bytes,7,opt,name=time_in_force,json=timeInForce,proto3" json:"time_in_force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrder) Reset()         { *m = CreateOrder{} }
func (m *CreateOrder) String() string { return proto.CompactTextString(m) }
func (*CreateOrder) ProtoMessage()    {}
func (*CreateOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_711dd2fb3b2d285e, []int{2}
}

func (m *CreateOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrder.Unmarshal(m, b)
}
func (m *CreateOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrder.Marshal(b, m, deterministic)
}
func (m *CreateOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrder.Merge(m, src)
}
func (m *CreateOrder) XXX_Size() int {
	return xxx_messageInfo_CreateOrder.Size(m)
}
func (m *CreateOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrder.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrder proto.InternalMessageInfo

func (m *CreateOrder) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *CreateOrder) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *CreateOrder) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *CreateOrder) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *CreateOrder) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateOrder) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *CreateOrder) GetTimeInForce() string {
	if m != nil {
		return m.TimeInForce
	}
	return ""
}

type OrderDescriptorType struct {
	Exchange             string   `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	OrderId              int64    `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ClientOrderId        string   `protobuf:"bytes,4,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderDescriptorType) Reset()         { *m = OrderDescriptorType{} }
func (m *OrderDescriptorType) String() string { return proto.CompactTextString(m) }
func (*OrderDescriptorType) ProtoMessage()    {}
func (*OrderDescriptorType) Descriptor() ([]byte, []int) {
	return fileDescriptor_711dd2fb3b2d285e, []int{3}
}

func (m *OrderDescriptorType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderDescriptorType.Unmarshal(m, b)
}
func (m *OrderDescriptorType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderDescriptorType.Marshal(b, m, deterministic)
}
func (m *OrderDescriptorType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderDescriptorType.Merge(m, src)
}
func (m *OrderDescriptorType) XXX_Size() int {
	return xxx_messageInfo_OrderDescriptorType.Size(m)
}
func (m *OrderDescriptorType) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderDescriptorType.DiscardUnknown(m)
}

var xxx_messageInfo_OrderDescriptorType proto.InternalMessageInfo

func (m *OrderDescriptorType) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *OrderDescriptorType) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OrderDescriptorType) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderDescriptorType) GetClientOrderId() string {
	if m != nil {
		return m.ClientOrderId
	}
	return ""
}

type OrderAndExchangeType struct {
	Exchange             string         `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Order                *ExchangeOrder `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OrderAndExchangeType) Reset()         { *m = OrderAndExchangeType{} }
func (m *OrderAndExchangeType) String() string { return proto.CompactTextString(m) }
func (*OrderAndExchangeType) ProtoMessage()    {}
func (*OrderAndExchangeType) Descriptor() ([]byte, []int) {
	return fileDescriptor_711dd2fb3b2d285e, []int{4}
}

func (m *OrderAndExchangeType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderAndExchangeType.Unmarshal(m, b)
}
func (m *OrderAndExchangeType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderAndExchangeType.Marshal(b, m, deterministic)
}
func (m *OrderAndExchangeType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderAndExchangeType.Merge(m, src)
}
func (m *OrderAndExchangeType) XXX_Size() int {
	return xxx_messageInfo_OrderAndExchangeType.Size(m)
}
func (m *OrderAndExchangeType) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderAndExchangeType.DiscardUnknown(m)
}

var xxx_messageInfo_OrderAndExchangeType proto.InternalMessageInfo

func (m *OrderAndExchangeType) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *OrderAndExchangeType) GetOrder() *ExchangeOrder {
	if m != nil {
		return m.Order
	}
	return nil
}

func init() {
	proto.RegisterType((*ExchangeOrder)(nil), "orders.v1.ExchangeOrder")
	proto.RegisterType((*Fill)(nil), "orders.v1.Fill")
	proto.RegisterType((*CreateOrder)(nil), "orders.v1.CreateOrder")
	proto.RegisterType((*OrderDescriptorType)(nil), "orders.v1.OrderDescriptorType")
	proto.RegisterType((*OrderAndExchangeType)(nil), "orders.v1.OrderAndExchangeType")
}

func init() {
	proto.RegisterFile("orders/v1/orders.proto", fileDescriptor_711dd2fb3b2d285e)
}

var fileDescriptor_711dd2fb3b2d285e = []byte{
	// 618 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x56, 0xd6, 0x9f, 0x75, 0xa7, 0xeb, 0x3a, 0xcc, 0x18, 0x66, 0x17, 0x50, 0x15, 0x01, 0x95,
	0x90, 0x5a, 0x6d, 0x08, 0x4d, 0x08, 0x6e, 0x36, 0x60, 0x52, 0xaf, 0xa6, 0x45, 0xbb, 0xe2, 0x26,
	0x72, 0x12, 0xaf, 0xb3, 0x94, 0xd8, 0x9d, 0xed, 0x6c, 0xeb, 0x3b, 0xf0, 0x08, 0xbc, 0x0b, 0xcf,
	0xc0, 0x1b, 0x21, 0x1f, 0xa7, 0x59, 0xf6, 0x83, 0x26, 0x71, 0x77, 0xce, 0xf7, 0x9d, 0xcf, 0x39,
	0xce, 0xf9, 0x8e, 0x61, 0x5b, 0xe9, 0x94, 0x6b, 0x33, 0xb9, 0xdc, 0x9d, 0xf8, 0x68, 0x3c, 0xd7,
	0xca, 0x2a, 0xb2, 0x56, 0x66, 0x97, 0xbb, 0xc3, 0x3f, 0x4d, 0xe8, 0x7d, 0xbf, 0x4e, 0xce, 0x99,
	0x9c, 0xf1, 0x63, 0x87, 0x92, 0x6d, 0x68, 0x9b, 0x45, 0x1e, 0xab, 0x8c, 0x06, 0x83, 0x60, 0xb4,
	0x16, 0x96, 0x19, 0x79, 0x01, 0x1d, 0x94, 0x45, 0x22, 0xa5, 0x2b, 0x83, 0x60, 0xd4, 0x08, 0x57,
	0x31, 0x9f, 0xa6, 0xe4, 0x2d, 0xf4, 0x93, 0x4c, 0x70, 0x69, 0xa3, 0xaa, 0xa2, 0x81, 0xda, 0x9e,
	0x87, 0x8f, 0xcb, 0xba, 0xd7, 0xd0, 0xb3, 0x9a, 0x49, 0xc3, 0x12, 0x1b, 0x59, 0x91, 0x73, 0xda,
	0xc4, 0x73, 0xd6, 0x97, 0xe0, 0xa9, 0xc8, 0x39, 0xd9, 0x82, 0xd6, 0x5c, 0x8b, 0x84, 0xd3, 0xd6,
	0x20, 0x18, 0x05, 0xa1, 0x4f, 0x9c, 0x54, 0x69, 0x31, 0x8b, 0x2e, 0x0a, 0x26, 0xad, 0xb0, 0x0b,
	0xda, 0x46, 0x76, 0xdd, 0x81, 0x27, 0x25, 0x46, 0xde, 0xc3, 0x13, 0x7e, 0xcd, 0x93, 0xc2, 0xf2,
	0xf4, 0xa6, 0x70, 0x15, 0x0b, 0x37, 0x97, 0x44, 0x55, 0xfc, 0x05, 0x76, 0x92, 0x22, 0xcf, 0x8b,
	0x8c, 0x59, 0x71, 0xc9, 0xa3, 0x8b, 0x42, 0x59, 0x7e, 0xa3, 0xea, 0xa0, 0x8a, 0xd6, 0x2a, 0x4e,
	0x5c, 0x41, 0xa5, 0x7e, 0x05, 0x5d, 0x61, 0x22, 0x61, 0x54, 0xc6, 0x2c, 0x4f, 0xe9, 0xda, 0x20,
	0x18, 0x75, 0x42, 0x10, 0x66, 0x5a, 0x22, 0xf8, 0x1b, 0x2d, 0xb3, 0x85, 0xa1, 0x50, 0xfe, 0x46,
	0xcc, 0xc8, 0x10, 0x7a, 0xee, 0xea, 0x91, 0x90, 0xd1, 0x99, 0xd2, 0x09, 0xa7, 0x5d, 0xa4, 0xbb,
	0x0e, 0x9c, 0xca, 0x23, 0x07, 0x11, 0x02, 0x4d, 0xbb, 0x98, 0x73, 0xba, 0x8e, 0x14, 0xc6, 0x0e,
	0x33, 0x22, 0xe5, 0xb4, 0xe7, 0x31, 0x17, 0x93, 0x37, 0xd0, 0x3a, 0x13, 0x59, 0x66, 0xe8, 0xc6,
	0xa0, 0x31, 0xea, 0xee, 0xf5, 0xc7, 0xd5, 0x5c, 0xc7, 0x47, 0x22, 0xcb, 0x42, 0xcf, 0x92, 0x7d,
	0xa0, 0x39, 0xd3, 0x33, 0x21, 0xa3, 0xb8, 0x58, 0x44, 0xb1, 0xd2, 0x5a, 0x5d, 0x45, 0x2c, 0x57,
	0x85, 0xb4, 0xb4, 0x8f, 0xf7, 0x7c, 0xe6, 0xf9, 0xc3, 0x62, 0x71, 0x88, 0xec, 0x01, 0x92, 0xe4,
	0x23, 0x3c, 0x7f, 0x40, 0x68, 0x0c, 0xb7, 0x74, 0x13, 0x75, 0x5b, 0x77, 0x75, 0x8e, 0x1b, 0xfe,
	0x0a, 0xa0, 0xe9, 0xbe, 0xef, 0x2c, 0x63, 0x35, 0x4b, 0xb9, 0x33, 0x44, 0xe0, 0x2d, 0x83, 0xf9,
	0x34, 0xbd, 0x99, 0xf2, 0x4a, 0x7d, 0xca, 0x3b, 0xd0, 0xa9, 0x26, 0xd0, 0x40, 0xa2, 0xca, 0xc9,
	0x4b, 0x80, 0x44, 0xe5, 0xb9, 0x30, 0x46, 0x28, 0x89, 0xce, 0x09, 0xc2, 0x1a, 0x42, 0xde, 0x41,
	0xdf, 0x67, 0x42, 0xc9, 0xb2, 0x49, 0xef, 0xa0, 0x8d, 0x0a, 0xf6, 0xed, 0xfd, 0x0e, 0xa0, 0xfb,
	0x55, 0x73, 0x66, 0x4b, 0xc3, 0xef, 0x40, 0x87, 0x97, 0x1b, 0x50, 0x5a, 0xbe, 0xca, 0x6b, 0xcb,
	0xb0, 0x72, 0x6b, 0x19, 0xaa, 0xf6, 0x1b, 0xff, 0x6a, 0xbf, 0x79, 0xa7, 0xfd, 0xe5, 0x4c, 0x5b,
	0x0f, 0xcc, 0xb4, 0x5d, 0x9b, 0xe9, 0x3d, 0x7f, 0xac, 0xde, 0xf3, 0xc7, 0xf0, 0x67, 0x00, 0x4f,
	0xb1, 0xf7, 0x6f, 0xdc, 0x24, 0x5a, 0xcc, 0xad, 0xd2, 0xa7, 0xee, 0xbc, 0xff, 0xb9, 0x49, 0x7d,
	0xad, 0x1b, 0x8f, 0xae, 0x75, 0xf3, 0x81, 0xb5, 0x1e, 0xc6, 0xb0, 0x85, 0xe1, 0x81, 0x4c, 0x97,
	0x4f, 0xc9, 0xa3, 0xed, 0x8c, 0xa1, 0x85, 0x87, 0x62, 0x37, 0xdd, 0x3d, 0x5a, 0xb3, 0xee, 0xad,
	0xe7, 0x28, 0xf4, 0x65, 0x87, 0x9f, 0x7e, 0xec, 0xcf, 0x84, 0x3d, 0x2f, 0xe2, 0x71, 0xa2, 0xf2,
	0xc9, 0x15, 0xd3, 0xf3, 0x99, 0x9e, 0xd8, 0x34, 0x66, 0x91, 0x9b, 0xae, 0x92, 0x13, 0x7c, 0xd9,
	0x12, 0x95, 0x4d, 0xaa, 0x37, 0xef, 0xb3, 0x8f, 0xe2, 0x36, 0x52, 0x1f, 0xfe, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xf8, 0xd8, 0x90, 0x16, 0x0e, 0x05, 0x00, 0x00,
}
